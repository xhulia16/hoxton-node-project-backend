// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:.data.db"
}

model User {
  id        Int         @id @default(autoincrement())
  name      String
  email     String      @unique
  image     String?
  password  String
  posts     Post[]
  comments  Comment[]
  likes     Likes[]
  followers Follows[]   @relation("follower")
  following Follows[]   @relation("following")
  Bookmarks Bookmarks[]
}

model Post {
  id        Int         @id @default(autoincrement())
  content   String
  image     String?
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int
  comments  Comment[]
  likes     Likes[]
  Bookmarks Bookmarks[]
}

model Comment {
  id      Int    @id @default(autoincrement())
  comment String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  post    Post   @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId  Int
  postId  Int
}

model Likes {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int
  postId Int
}

model Follows {
  id          Int  @id @default(autoincrement())
  follower    User @relation("follower", fields: [followerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  following   User @relation("following", fields: [followingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  followerId  Int
  followingId Int
}

model Bookmarks {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int
  postId Int
}
